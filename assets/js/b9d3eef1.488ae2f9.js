"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8270],{3083:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var r=o(4848),c=o(8453);const t={id:"concurrentPool"},s=void 0,l={id:"concurrentPool",title:"concurrentPool",description:"concurrentPool() function",source:"@site/docs/concurrentPool.md",sourceDirName:".",slug:"/concurrentPool",permalink:"/docs/concurrentPool",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"concurrentPool"},sidebar:"api",previous:{title:"concurrent",permalink:"/docs/concurrent"},next:{title:"cycle",permalink:"/docs/cycle"}},i={},a=[{value:"concurrentPool() function",id:"concurrentpool-function",level:2},{value:"Example",id:"example",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"concurrentpool-function",children:"concurrentPool() function"}),"\n",(0,r.jsx)(n.p,{children:"Ensures consistency in the level of concurrency based on the given number of concurrent tasks."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"declare function concurrentPool<A>(length: number, iterable: AsyncIterable<A>): AsyncIterableIterator<A>;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"await pipe(\r\n  [1, 2, 3, 4, 5, 6],\r\n  toAsync,\r\n  map((a) => delay(100 * a, a)),\r\n  concurrentPool(3),\r\n  each(console.log), // log 1, 2, 3, 4, 5, 6\r\n); // 0.9 seconds\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/Lazy/concurrentPool.ts",children:"Open Source Code"})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var r=o(6540);const c={},t=r.createContext(c);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);