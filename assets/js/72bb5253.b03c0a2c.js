"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9589],{5244:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>o});var c=r(4848),t=r(8453);const s={id:"reduceLazy"},a=void 0,d={id:"reduceLazy",title:"reduceLazy",description:"reduceLazy() function",source:"@site/docs/reduceLazy.md",sourceDirName:".",slug:"/reduceLazy",permalink:"/docs/reduceLazy",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"reduceLazy"},sidebar:"api",previous:{title:"reduce",permalink:"/docs/reduce"},next:{title:"resolveProps",permalink:"/docs/resolveProps"}},i={},o=[{value:"reduceLazy() function",id:"reducelazy-function",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"reducelazy-function",children:"reduceLazy() function"}),"\n",(0,c.jsxs)(n.p,{children:["High order functional version of ",(0,c.jsx)(n.code,{children:"reduce"}),", which behaves identical to it."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-typescript",children:"declare function reduceLazy<T extends Iterable<unknown> | AsyncIterable<unknown>, Acc>(f: SyncReducer<Acc, IterableInfer<T>> | AsyncReducer<Acc, IterableInfer<T>>, seed: Acc): (iterable: InferCarrier<T>) => ReturnValueType<T, Acc>;\n"})}),"\n",(0,c.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,c.jsx)(n.p,{children:"Type must be provided for stand alone call."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"const reduce = reduceLazy((a: number, b: number) => a + b, 5)\r\n\r\nreduce([1, 2, 3]) // number\r\nreduce(toAsync([1, 2, 3])) // Promise<number>\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Fit perfectly with ",(0,c.jsx)(n.code,{children:"pipe"})]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"pipe(\r\n  [1, 2, 3, 4],\r\n  reduceLazy((a, b) => a + b, 5)\r\n); // 15\n"})}),"\n",(0,c.jsx)(n.p,{children:"You can use asynchronous callback"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await pipe(\r\n  [1, 2, 3, 4],\r\n  reduceLazy(async (a, b) => a + b, 5)\r\n); // 15\n"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"AsyncIterable"})," doesn't matter."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await pipe(\r\n  [1, 2, 3, 4],\r\n  toAsync,\r\n  reduceLazy((a, b) => a + b, 5)\r\n); // 15\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/reduceLazy.ts",children:"Open Source Code"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var c=r(6540);const t={},s=c.createContext(t);function a(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);