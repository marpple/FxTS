"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8935],{2113:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var t=r(4848),i=r(8453);const s={id:"zip"},o=void 0,a={id:"zip",title:"zip",description:"zip() function",source:"@site/docs/zip.md",sourceDirName:".",slug:"/zip",permalink:"/docs/zip",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"zip"},sidebar:"api",previous:{title:"values",permalink:"/docs/values"},next:{title:"zipWith",permalink:"/docs/zipWith"}},c={},p=[{value:"zip() function",id:"zip-function",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"zip-function",children:"zip() function"}),"\n",(0,t.jsx)(n.p,{children:"Merges the values of each of the arrays with the values at the corresponding position together. Useful when you have separate data sources that are coordinated through matching array indices."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"declare function zip<T extends UniversalIterable, TS extends UniversalIterable[]>(a: T): (...args: TS) => ReturnZipType<[T, ...TS]>;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const iter = zip([1, 2, 3, 4], [5, 6, 7, 8]);\r\niter.next() // {done:false, value: [1, 5]}\r\niter.next() // {done:false, value: [2, 6]}\r\niter.next() // {done:false, value: [3, 7]}\r\niter.next() // {done:false, value: [4, 8]}\r\niter.next() // {done:true, value: undefined}\r\n\r\n// with pipe\r\npipe(\r\n [5, 6, 7, 8],\r\n zip([1, 2, 3, 4]),\r\n toArray,\r\n); // [[1, 5], [2, 6], [3, 7], [4, 8]]\r\n\r\nawait pipe(\r\n Promise.resolve([5, 6, 7, 8]),\r\n zip([1, 2, 3, 4]),\r\n toArray,\r\n);  // [[1, 5], [2, 6], [3, 7], [4, 8]]\r\n\r\n// with toAsync\r\nawait pipe(\r\n [Promise.resolve(5), Promise.resolve(6), Promise.resolve(7), Promise.resolve(8)],\r\n toAsync,\r\n zip([1, 2, 3, 4]),\r\n toArray,\r\n);  // [[1, 5], [2, 6], [3, 7], [4, 8]]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://codesandbox.io/s/fxts-zip-81jnh",children:"Try It"})}),"\n",(0,t.jsxs)(n.p,{children:["see ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/pipe",children:"pipe"}),", ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/toAsync",children:"toAsync"}),", ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/toArray",children:"toArray"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/Lazy/zip.ts",children:"Open Source Code"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);