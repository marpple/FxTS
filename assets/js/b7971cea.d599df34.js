"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[924],{1514:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>i});var n=r(4848),s=r(8453);const t={id:"resolveProps"},c=void 0,a={id:"resolveProps",title:"resolveProps",description:"resolveProps() function",source:"@site/docs/resolveProps.md",sourceDirName:".",slug:"/resolveProps",permalink:"/docs/resolveProps",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"resolveProps"}},l={},i=[{value:"resolveProps() function",id:"resolveprops-function",level:2},{value:"Example",id:"example",level:2}];function p(e){const o={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h2,{id:"resolveprops-function",children:"resolveProps() function"}),"\n",(0,n.jsx)(o.p,{children:"Resolve all properties of an object that may be promises."}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.strong,{children:"Signature:"})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-typescript",children:"declare function resolveProps<T extends object, Key = Exclude<keyof T, symbol>>(obj: T): Promise<{\r\n    [K in keyof T]: K extends Key ? Awaited<T[K]> : never;\r\n}>;\n"})}),"\n",(0,n.jsx)(o.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:"const obj = {\r\n a: Promise.resolve(1),\r\n b: 2,\r\n c: Promise.resolve(3),\r\n}\r\n\r\nconst result = await resolveProps(obj);\r\nconsole.log(result); // { a: 1, b: 2, c: 3 }\n"})}),"\n",(0,n.jsxs)(o.p,{children:["Also, with this function, you can define ",(0,n.jsx)(o.code,{children:"asyncEvolve"})," simply."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { evolve, pipe, resolveProps } from "@fx-ts/core";\r\n\r\nconst asyncEvolve = <T extends object>(transformation:Transformation<T>) =>\r\n  (obj:T) => pipe(obj, evolve(transformation), resolveProps)\r\n\r\nconst a = await asyncEvolve({ a: async (a) => a + 1 })({ a: 1 });\r\nconsole.log(a); // { a: 2 }\r\n\r\nconst resultByFormat = await asyncEvolve<Request>({\r\n  foo: async (foo) => await fetch(`https://example.com/foo/${foo}`).json(),\r\n  bar: async (bar) => await fetch(`https://example.com/bar/${bar}`).text(),\r\n})\r\nconst result = await resultByFormat({foo: "foo", bar: "bar"});\r\n\r\nconsole.log({\r\n foo: result.foo,\r\n bar: result.bar,\r\n})\n'})}),"\n",(0,n.jsxs)(o.p,{children:["see ",(0,n.jsx)(o.a,{href:"https://fxts.dev/docs/pipe",children:"pipe"})," and ",(0,n.jsx)(o.a,{href:"https://fxts.dev/docs/evolve",children:"evolve"}),"."]}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.a,{href:"https://github.com/marpple/FxTS/blob/main/src/resolveProps.ts",children:"Open Source Code"})})]})}function d(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,o,r)=>{r.d(o,{R:()=>c,x:()=>a});var n=r(6540);const s={},t=n.createContext(s);function c(e){const o=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(t.Provider,{value:o},e.children)}}}]);