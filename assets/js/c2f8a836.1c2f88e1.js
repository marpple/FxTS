"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2626],{5117:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var i=t(4848),r=t(8453);const s={id:"zipWithIndex"},d=void 0,o={id:"zipWithIndex",title:"zipWithIndex",description:"zipWithIndex() function",source:"@site/docs/zipWithIndex.md",sourceDirName:".",slug:"/zipWithIndex",permalink:"/docs/zipWithIndex",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"zipWithIndex"},sidebar:"api",previous:{title:"zipWith",permalink:"/docs/zipWith"},next:{title:"add",permalink:"/docs/add"}},c={},a=[{value:"zipWithIndex() function",id:"zipwithindex-function",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"zipwithindex-function",children:"zipWithIndex() function"}),"\n",(0,i.jsx)(n.p,{children:"Returns Iterable/AsyncIterable including an index to the existing Iterable/AsyncIterable value."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"declare function zipWithIndex<T extends Iterable<unknown> | AsyncIterable<unknown>>(iterable: T): ReturnZipWithIndexType<T>;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const iter = zipWithIndex(["a", "b", "c", "d"]);\r\niter.next() // {done:false, value: [0, "a"]}\r\niter.next() // {done:false, value: [1, "b"]}\r\niter.next() // {done:false, value: [2, "c"]}\r\niter.next() // {done:false, value: [3, "d"]}\r\niter.next() // {done:true, value: undefined}\r\n\r\n// with pipe\r\npipe(\r\n ["a", "b", "c", "d"],\r\n zipWithIndex,\r\n toArray,\r\n); // [[0, "a"], [1, "b"], [2, "c"], [3, "d"]]\r\n\r\nawait pipe(\r\n Promise.resolve(["a", "b", "c", "d"]),\r\n zipWithIndex,\r\n toArray,\r\n); // [[0, "a"], [1, "b"], [2, "c"], [3, "d"]]\r\n\r\n// with toAsync\r\nawait pipe(\r\n [Promise.resolve("a"), Promise.resolve("b"), Promise.resolve("c"), Promise.resolve("d")],\r\n toAsync,\r\n zipWithIndex,\r\n toArray,\r\n); // [[0, "a"], [1, "b"], [2, "c"], [3, "d"]]\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://codesandbox.io/s/fxts-zipwithindex-p1k31",children:"Try It"})}),"\n",(0,i.jsxs)(n.p,{children:["see ",(0,i.jsx)(n.a,{href:"https://fxts.dev/docs/pipe",children:"pipe"}),", ",(0,i.jsx)(n.a,{href:"https://fxts.dev/docs/toAsync",children:"toAsync"}),", ",(0,i.jsx)(n.a,{href:"https://fxts.dev/docs/toArray",children:"toArray"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/Lazy/zipWithIndex.ts",children:"Open Source Code"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);