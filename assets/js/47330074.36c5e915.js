"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7291],{725:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=r(4848),i=r(8453);const s={id:"uniq"},o=void 0,a={id:"uniq",title:"uniq",description:"uniq() function",source:"@site/docs/uniq.md",sourceDirName:".",slug:"/uniq",permalink:"/docs/uniq",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"uniq"},sidebar:"api",previous:{title:"transpose",permalink:"/docs/transpose"},next:{title:"uniqBy",permalink:"/docs/uniqBy"}},c={},l=[{value:"uniq() function",id:"uniq-function",level:2},{value:"Example",id:"example",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"uniq-function",children:"uniq() function"}),"\n",(0,t.jsx)(n.p,{children:"Returns Iterable/AsyncIterable with duplicate values removed inside the given Iterable/AsyncIterable. Only primitive values can be compared. The order of result values is determined by the order they occur in the array."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"declare function uniq<A extends Iterable<unknown> | AsyncIterable<unknown>>(iterable: A): ReturnIterableIteratorType<A>;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const iter = uniq([1, 2, 1, 3, 2]);\r\niter.next() // {done:false, value: 1}\r\niter.next() // {done:false, value: 2}\r\niter.next() // {done:false, value: 3}\r\niter.next() // {done:true, value: undefined}\r\n\r\n// with pipe\r\npipe(\r\n [1, 2, 1, 3],\r\n uniq,\r\n toArray,\r\n); // [1, 2, 3]\r\n\r\nawait pipe(\r\n Promise.resolve([1, 2, 1, 3]),\r\n uniq,\r\n toArray,\r\n); // [1, 2, 3]\r\n\r\n// with toAsync\r\nawait pipe(\r\n [Promise.resolve(1), Promise.resolve(2), Promise.resolve(1), Promise.resolve(3)],\r\n toAsync,\r\n uniq,\r\n toArray,\r\n); // [1, 2, 3]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://codesandbox.io/s/fxts-uniq-uljmk",children:"Try It"})}),"\n",(0,t.jsxs)(n.p,{children:["see ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/pipe",children:"pipe"}),", ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/toAsync",children:"toAsync"}),", ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/toArray",children:"toArray"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/Lazy/uniq.ts",children:"Open Source Code"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);