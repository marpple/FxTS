"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[925],{3855:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var t=r(4848),o=r(8453);const s={id:"peek"},a=void 0,i={id:"peek",title:"peek",description:"peek() function",source:"@site/docs/peek.md",sourceDirName:".",slug:"/peek",permalink:"/docs/peek",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"peek"},sidebar:"api",previous:{title:"map",permalink:"/docs/map"},next:{title:"pipeLazy",permalink:"/docs/pipeLazy"}},c={},l=[{value:"peek() function",id:"peek-function",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"peek-function",children:"peek() function"}),"\n",(0,t.jsxs)(n.p,{children:["Iterate over an input list, calling a provided ",(0,t.jsx)(n.code,{children:"f"})," for each element in the Iterable/AsyncIterable. Use it when you want to create an effect inside ",(0,t.jsx)(n.code,{children:"pipe"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"declare function peek<T>(f: (a: T) => unknown, iterable: Iterable<T>): IterableIterator<T>;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const iter = peek(a => console.log(a), [1, 2, 3, 4]);\r\niter.next() // {done:false, value: 1} // log 1\r\niter.next() // {done:false, value: 2} // log 2\r\niter.next() // {done:false, value: 3} // log 3\r\niter.next() // {done:false, value: 4} // log 4\r\n\r\n// with pipe\r\npipe(\r\n [1, 2, 3, 4],\r\n peek(a => console.log(a)),\r\n toArray,\r\n); // [1, 2, 3, 4] // log 1,2,3,4\r\n\r\nawait pipe(\r\n Promise.resolve([1, 2, 3, 4]),\r\n peek(a => console.log(a)),\r\n toArray,\r\n); // [1, 2, 3, 4] // log 1,2,3,4\r\n\r\n// if you want to use asynchronous callback\r\nawait pipe(\r\n Promise.resolve([1, 2, 3, 4]),\r\n toAsync,\r\n peek(async (a) => console.log(a)),\r\n toArray,\r\n); // [1, 2, 3, 4] // log 1,2,3,4\r\n\r\n// with toAsync\r\nawait pipe(\r\n [Promise.resolve(1), Promise.resolve(2), Promise.resolve(3), Promise.resolve(4)],\r\n toAsync,\r\n peek(a => console.log(a)),\r\n toArray,\r\n); // [1, 2, 3, 4] // log 1,2,3,4\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://codesandbox.io/s/fxts-peek-xm1jh",children:"Try It"})}),"\n",(0,t.jsxs)(n.p,{children:["see ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/pipe",children:"pipe"}),", ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/toAsync",children:"toAsync"}),", ",(0,t.jsx)(n.a,{href:"https://fxts.dev/docs/toArray",children:"toArray"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/marpple/FxTS/blob/main/src/Lazy/peek.ts",children:"Open Source Code"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(6540);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);